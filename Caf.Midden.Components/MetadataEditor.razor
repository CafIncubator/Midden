@using Microsoft.AspNetCore.Components.Forms
@using AntDesign
@inject Common.IUpdateLastUpdated State
@inject ModalService ModalService
@using Caf.Midden.Components.Modals 

<Space>
    <SpaceItem>
        <Popconfirm Title="Confirm reset"
                    OkText="Reset"
                    CancelText="Cancel"
                    OnConfirm="NewMetadata">
            <Button>Reset</Button>
        </Popconfirm>
    </SpaceItem>
    <SpaceItem>
        <Button OnClick="LoadMetadataTest">Test</Button>
    </SpaceItem>
</Space>


@if (Metadata != null && AppConfig != null)
{
<AntDesign.Form Model="@this.Metadata"
                LabelColSpan="8"
                WrapperColSpan="16">
    <FormItem Label="Zone">
        <SimpleSelect @bind-Value="@context.Dataset.Zone"
                      Placeholder="Zone that holds dataset">
            <SelectOptions>
                @foreach (var zone in AppConfig.Zones)
                {
                    <SimpleSelectOption Value=@zone Label=@zone />
                }
            </SelectOptions>
        </SimpleSelect>
    </FormItem>
    <FormItem Label="Name">
        <AntDesign.Input @bind-Value="context.Dataset.Name"
                         Placeholder="Name of dataset" />
    </FormItem>
    <FormItem Label="Project">
        <AntDesign.Input @bind-Value="context.Dataset.Project"
                         Placeholder="Name of project that produced the dataset" />
    </FormItem>
    <FormItem Label="Description">
        <AntDesign.TextArea @bind-Value="context.Dataset.Description"
                            Placeholder="Description of dataset"
                            MinRows="5"
                            AutoSize="true" />
    </FormItem>
    <FormItem Label="Contacts">
        <Button OnClick="AddContactHandler">Add</Button>
        <AntDesign.Table
               TItem="Caf.Midden.Core.Models.v0_1_0alpha4.Person"
               DataSource="@context.Dataset.Contacts">
            <ChildContent Context="contact">
                <Column @bind-Field="contact.Name" />
                <Column @bind-Field="contact.Email" />
                <Column @bind-Field="contact.Role" />
                <ActionColumn Title="Action">
                    <Space Size="middle">
                        <SpaceItem>
                            <Button Danger OnClick="() => DeleteContactHandler(contact)">
                                <Icon Type="delete" />
                            </Button>
                        </SpaceItem>
                        <SpaceItem>
                            <Button OnClick="() => OpenPersonModalTemplate(contact)">
                                <Icon Type="edit" />
                            </Button>
                        </SpaceItem>
                    </Space>
                </ActionColumn>
            </ChildContent>
            
        </AntDesign.Table>
    </FormItem>
    <FormItem Label="Spatial Repeats">
        <AntDesign.InputNumber id="spatial-repeats"
                               @bind-Value="context.Dataset.SpatialRepeats" />
    </FormItem>
    <FormItem Label="Spatial Extent">
        <FormItem>
            <SimpleSelect @bind-Value="this.GeometryTemplate"
                          Placeholder="Saved values"
                          AllowClear="true"
                          OnSelectedItemChanged="OnGeometryItemChangedHandler">
                <SelectOptions>
                    @if (AppConfig.Geometries != null)
                    {
                        @foreach (var geom in AppConfig.Geometries)
                        {
                            <SimpleSelectOption Value="@geom.GeoJson"
                                                Label="@geom.Name" />
                        }
                    }
                </SelectOptions>
            </SimpleSelect>
        </FormItem>
        <FormItem>
            <AntDesign.TextArea @bind-Value="context.Dataset.Geometry"
                                Placeholder="Valid geojson" />
        </FormItem>
    </FormItem>
    <FormItem Label="Temporal Resolution">
        <AntDesign.Input @bind-Value="context.Dataset.TemporalResolution"
                         Placeholder="e.g. '15 min'" />
    </FormItem>
    <FormItem Label="Temporal Extent">
        <AntDesign.Input @bind-Value="context.Dataset.TemporalExtent"
                         Placeholder="YYYY-MM-DD/YYYY-MM-DD" />
    </FormItem>

</AntDesign.Form>

    <!-- <EditForm EditContext="@EditContext">

    </EditForm>-->
}
else
{
    <p>No Metadata loaded</p>
}

@code {
    private string GeometryTemplate { get; set; }
    private ModalRef personModalRef;

    private async Task OpenPersonModalTemplate(Caf.Midden.Core.Models.v0_1_0alpha4.Person contact)
    {
        var templateOptions = new Caf.Midden.Components.ViewModels.PersonModalViewModel
        {
            Person = new Caf.Midden.Core.Models.v0_1_0alpha4.Person(){
                Name = contact.Name,
                Email = contact.Email,
                Role = contact.Role
            },
            Roles = AppConfig.Roles
        };

        var modalConfig = new ModalOptions();
        modalConfig.Title = "Contact";
        modalConfig.OnCancel = async (e) =>
        {
            await personModalRef.CloseAsync();
        };

        modalConfig.AfterClose = () =>
        {
            contact.Name = templateOptions.Person.Name;
            contact.Email = templateOptions.Person.Email;
            contact.Role = templateOptions.Person.Role;

            InvokeAsync(StateHasChanged);

            return Task.CompletedTask;
        };

        personModalRef = await ModalService
        .CreateModalAsync<PersonModal, Caf.Midden.Components.ViewModels.PersonModalViewModel>(modalConfig, templateOptions);

    }
}