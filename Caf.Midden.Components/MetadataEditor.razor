@using Microsoft.AspNetCore.Components.Forms
@using AntDesign
@inject Common.IUpdateLastUpdated State

<Space>
    <SpaceItem>
        <Popconfirm Title="Confirm reset"
                    OkText="Reset"
                    CancelText="Cancel"
                    OnConfirm="NewMetadata">
            <Button>Reset</Button>
        </Popconfirm>
    </SpaceItem>
    <SpaceItem>
        <Button OnClick="LoadMetadataTest">Test</Button>
    </SpaceItem>
</Space>


@if (Metadata != null & AppConfig != null)
{
<AntDesign.Form Model="@this.Metadata"
                LabelColSpan="8"
                WrapperColSpan="16">
    <FormItem Label="Zone">
        <SimpleSelect @bind-Value="@context.Dataset.Zone"
                      Placeholder="Zone that holds dataset">
            <SelectOptions>
                @foreach (var zone in AppConfig.Zones)
                {
                    <SimpleSelectOption Value=@zone Label=@zone />
                }
            </SelectOptions>
        </SimpleSelect>
    </FormItem>
    <FormItem Label="Name">
        <AntDesign.Input @bind-Value="context.Dataset.Name"
                         Placeholder="Name of dataset" />
    </FormItem>
    <FormItem Label="Project">
        <AntDesign.Input @bind-Value="context.Dataset.Project"
                         Placeholder="Name of project that produced the dataset" />
    </FormItem>
    <FormItem Label="Description">
        <AntDesign.TextArea @bind-Value="context.Dataset.Description"
                            Placeholder="Description of dataset"
                            MinRows="5"
                            AutoSize="true" />
    </FormItem>
    <FormItem Label="Contacts">
        <Button OnClick="(() => { AddContactHandler(); })">Add</Button>
        <AntList Id="contacts"
                 DataSource="@context.Dataset.Contacts"
                 Split="false"
                 Size="small">
            <ChildContent Context="contact">
                <ListItem>
                    <InputGroup Compact>
                        <FormItem Class="thirty-percent">
                            <AntDesign.Input @bind-Value="contact.Name"
                                             Placeholder="Name of contact" />
                        </FormItem>
                        <FormItem Class="thirty-percent">
                            <AntDesign.Input @bind-Value="contact.Email"
                                             Placeholder="Email of contact" />
                        </FormItem>
                        <FormItem Class="thirty-percent">
                            <SimpleSelect @bind-Value="contact.Role"
                                          Placeholder="Role of contact">
                                <SelectOptions>
                                    @foreach (var role in AppConfig.Roles)
                                    {
                                        <SimpleSelectOption Value=@role Label=@role />
                                    }
                                </SelectOptions>
                            </SimpleSelect>
                        </FormItem>
                        <Button Danger OnClick="@(() => { DeleteContactHandler(contact); })">
                            <Icon Type="delete" />
                        </Button>
                    </InputGroup>
                </ListItem>
            </ChildContent>
        </AntList>
    </FormItem>
    <FormItem Label="Tags">
        <Button OnClick="OnChecked">Add</Button>
    @if (context.Dataset.Tags != null)
    {
        @foreach (string tag in context.Dataset.Tags)
        {
            <Tag Mode="closeable" OnClose="()=>OnTagClose(tag)">@tag</Tag>
        }
    }
    @if(TagInputVisible)
    {
        <Input @ref="_inputRef" @bind-Value="_inputValue" OnBlur="HandleTagInputConfirm" OnPressEnter="HandleTagInputConfirm" />
    }
    else
    {
        <Tag Mode="checkable" Class="editable-tag" OnClick="OnChecked">
            <Icon Type="plus" />New Tag
        </Tag>
    }
    </FormItem>
    <FormItem Label="Spatial Repeats">
        <AntDesign.InputNumber id="spatial-repeats"
                               @bind-Value="context.Dataset.SpatialRepeats" />
    </FormItem>
    <FormItem Label="Spatial Extent">
        <FormItem>
            <SimpleSelect @bind-Value="this.GeometryTemplate"
                          Placeholder="Saved values"
                          AllowClear="true"
                          OnSelectedItemChanged="OnGeometryItemChangedHandler">
                <SelectOptions>
                    @if (AppConfig.Geometries != null)
                    {
                        @foreach (var geom in AppConfig.Geometries)
                        {
                            <SimpleSelectOption Value="@geom.GeoJson"
                                                Label="@geom.Name" />
                        }
                    }
                </SelectOptions>
            </SimpleSelect>
        </FormItem>
        <FormItem>
            <AntDesign.TextArea @bind-Value="context.Dataset.Geometry"
                                Placeholder="Valid geojson" />
        </FormItem>
    </FormItem>
    <FormItem Label="Temporal Resolution">
        <AntDesign.Input @bind-Value="context.Dataset.TemporalResolution"
                         Placeholder="e.g. '15 min'" />
    </FormItem>
    <FormItem Label="Temporal Extent">
        <AntDesign.Input @bind-Value="context.Dataset.TemporalExtent"
                         Placeholder="YYYY-MM-DD/YYYY-MM-DD" />
    </FormItem>

</AntDesign.Form>

    <!-- <EditForm EditContext="@EditContext">

    </EditForm>-->
}
else
{
    <p>No Metadata loaded</p>
}

@code {
    string GeometryTemplate { get; set; }

}