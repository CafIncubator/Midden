@using Caf.Midden.Core.Models.v0_1_0alpha4
@using Microsoft.AspNetCore.Components
@using AntDesign
@inherits ModalTemplate<Caf.Midden.Components.ViewModels.TagModalViewModel>
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using Caf.Midden.Components.ViewModels

<Form Model="@_model"
      LabelCol="new ColLayoutParam { Span = 8 }"
      WrapperCol="new ColLayoutParam { Span = 16 }"
      OnFinish="OnFinish"
      OnFinishFailed="OnFinishFailed">
    <FormItem Label="From Saved">
        <SimpleSelect @bind-Value="@selectedSavedTag"
                      OnSelectedItemChanged="SelectedItemChangedHandler"
                      Placeholder="Saved tags">
            <SelectOptions>
                @foreach (var role in context.Tags)
                {
                    <SimpleSelectOption Value=@role Label=@role />
                }
            </SelectOptions>
        </SimpleSelect>
    </FormItem>
    <FormItem Label="Tag">
        <Input @bind-Value="context.Tag"
               Placeholder="Type tag or choose from saved" />
    </FormItem>
</Form>

@code {
    private TagModalViewModel _model;
    private string selectedSavedTag { get; set; }

    protected override void OnInitialized()
    {
        _model = base.Options ?? new TagModalViewModel();
        base.OnInitialized();
    }

    private void OnFinish(EditContext editContext)
    {
        _ = base.ModalRef.CloseAsync();
    }

    private void OnFinishFailed(EditContext editContext)
    {

    }
    private void SelectedItemChangedHandler(string value)
    {
        this._model.Tag = selectedSavedTag;

        //selectedSavedTag = "";
        //InvokeAsync(StateHasChanged);
    }
    void handleChange(string value)
    {
        Console.WriteLine(value);
    }
}
